package me.wallhacks.spark.systems.module.modules.exploit;

import me.wallhacks.spark.Spark;
import me.wallhacks.spark.event.player.PlayerUpdateEvent;
import me.wallhacks.spark.systems.module.Module;
import me.wallhacks.spark.util.FileUtil;
import net.minecraft.client.gui.chat.NarratorChatListener;
import net.minecraft.client.renderer.GlStateManager;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.client.event.EntityViewRenderEvent;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;
import org.jline.utils.InputStreamReader;

import javax.sound.sampled.AudioInputStream;
import javax.sound.sampled.AudioSystem;
import javax.sound.sampled.Clip;
import javax.sound.sampled.FloatControl;
import java.awt.*;
import java.io.*;


@Module.Registration(name = "AutoBible", description = "The best module")
public class AutoBible extends Module {



    final BufferedReader bufferedReader;
    public AutoBible() throws UnsupportedEncodingException {

        InputStream in = this.getClass().getClassLoader().getResourceAsStream("assets"+System.getProperty("file.separator")+"minecraft"+System.getProperty("file.separator")+"holy"+System.getProperty("file.separator")+"bible.txt");
        bufferedReader = new BufferedReader(
                new InputStreamReader(in, "UTF8"));

    }

    int ticks = 20;

    @SubscribeEvent
    void OnUpdate(PlayerUpdateEvent event) {

        if(ticks < 0)
        {
            try {
                String n = "";
                while(n.length() == 0)
                    n = bufferedReader.readLine();
                NarratorChatListener.INSTANCE.narrator.say(n);

                mc.player.sendChatMessage(n);

                ticks = (int) (n.length()*2.5);
            } catch (IOException e) {
                e.printStackTrace();
            }

        }
        else
            ticks--;
    }


}
