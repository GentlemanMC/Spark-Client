package me.wallhacks.spark.systems.module.modules.exploit;

import me.wallhacks.spark.Spark;
import me.wallhacks.spark.event.player.PacketReceiveEvent;
import me.wallhacks.spark.systems.module.Module;
import me.wallhacks.spark.systems.setting.settings.IntSetting;
import me.wallhacks.spark.util.SessionUtils;
import net.minecraft.client.Minecraft;
import net.minecraft.client.entity.EntityPlayerSP;
import net.minecraft.entity.Entity;
import net.minecraft.entity.passive.EntityTameable;
import net.minecraft.entity.player.EntityPlayer;
import net.minecraft.network.play.server.SPacketEntityTeleport;
import net.minecraft.util.math.BlockPos;
import net.minecraftforge.fml.common.eventhandler.SubscribeEvent;

@Module.Registration(name = "CoordsFinder", description = "Captures destination coordinates on teleport")
public class CoordsFinder extends Module {
	IntSetting minDistance = new IntSetting("MinTeleportDistance", this, 160, 0, 999);

    @SubscribeEvent
    public void onServer(PacketReceiveEvent event) {
    	if (event.getPacket() instanceof SPacketEntityTeleport) {
    		SPacketEntityTeleport packet = event.getPacket();
    		BlockPos position = new BlockPos(packet.getX(), packet.getY(), packet.getZ());
    		Entity entity = Minecraft.getMinecraft().world.getEntityByID(packet.getEntityId());
    		EntityPlayerSP player = Minecraft.getMinecraft().player;
    		double distance = Math.sqrt(player.getDistanceSq(position));

    		if (entity instanceof EntityTameable) {
    			if (distance > minDistance.getValue()) {
    				if (((EntityTameable) entity).isTamed()) {
    					if (((EntityTameable) entity).getOwner() != player) {
    						String coordsString = "x=" + String.valueOf(position.getX()) + " y=" + String.valueOf(position.getY()) + " z=" + String.valueOf(position.getZ());
    						String ownerName = SessionUtils.getname(((EntityTameable) entity).getOwnerId());
    						Spark.sendInfo("[" + entity.getName() + " teleport] Coords: " + coordsString + " Owner: " + ownerName);
    					}
    				}
    			} 
    		} else if (entity instanceof EntityPlayer) {
    			if (distance > minDistance.getValue()) {
    				String coordsString = "x=" + String.valueOf(position.getX()) + " y=" + String.valueOf(position.getY()) + " z=" + String.valueOf(position.getZ());
    				String playerName = ((EntityPlayer) entity).getDisplayNameString();
    				Spark.sendInfo("[Player teleport] Coords: " + coordsString + " Name: " + playerName);
    			}
    		}
    	}
    }
}
