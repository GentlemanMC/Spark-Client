buildscript {
    repositories {
        mavenCentral()
        maven {
            name = 'SpongePowered'
            url = 'https://repo.spongepowered.org/repository/maven-public'
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
        classpath 'org.spongepowered:mixingradle:0.6-SNAPSHOT'
        classpath 'com.github.jengelman.gradle.plugins:shadow:2.0.4'
        classpath 'org.jetbrains:annotations:22.0.0'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'com.github.johnrengelman.shadow'

version project.modVersion
group project.modGroup


compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}


minecraft {
    version = project.forgeVersion
    runDir = 'run'
    mappings = project.mcpVersion
    coreMod = 'me.wallhacks.spark.mixin.MixinLoader'
    makeObfSourceJar = false
    replaceIn 'reference/Reference.java'
    replace '${version_lunatriuscore}', project.version_lunatriuscore
    replace '${version_schematica}', project.version_schematica
}

repositories {
    mavenCentral()
    maven {
        name = 'spongepowered-repo'
        url = 'https://repo.spongepowered.org/repository/maven-public/'
    }
    maven {
        name = 'jitpack'
        url = 'https://jitpack.io'
    }
    maven {
        name = 'impactdevelopment-repo'
        url = 'https://impactdevelopment.github.io/maven/'
    }
}

dependencies {
    compile group: "com.googlecode.json-simple", name: "json-simple", version: "1.1.1"
    compile group: 'club.minnced', name: 'java-discord-rpc', version: '2.0.1'
    compile group: 'org.json', name: 'json', version: '20210307'
    compile 'org.jetbrains:annotations:22.0.0'
    compile('org.spongepowered:mixin:0.7.11-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
    }

}



task getDeps(type: Copy) {
    from sourceSets.main.runtimeClasspath
    into 'runtime/'
}

processResources {
    inputs.property 'version', project.version
    inputs.property 'mcversion', project.minecraft.version
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
        expand 'version': project.version,
               'mcversion': project.minecraft.version,
               'version_lunatriuscore': project.version_lunatriuscore,
               'version_schematica': project.version_schematica
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
    rename '(.+_at.cfg)', 'META-INF/$1'
}

shadowJar {
    dependencies {
        include(dependency('com.googlecode.json-simple:json-simple:1.1.1'))
        include(dependency('org.spongepowered:mixin'))
        include(dependency('club.minnced:java-discord-rpc:2.0.1'))
        include(dependency('club.minnced:discord-rpc-release:v3.3.0'))
        include(dependency('org.jetbrains:annotations:22.0.0'))
    }
    exclude 'dummyThing'
    exclude 'LICENSE.txt'
    classifier = ''
}

mixin {
    defaultObfuscationEnv searge
    add sourceSets.main, 'mixins.spark.refmap.json'
}

reobf {
    shadowJar {
        mappingType = 'SEARGE'
        classpath = sourceSets.main.compileClasspath
    }
}



jar {
    manifest {
        attributes(
                'MixinConfigs': 'mixins.spark.json',
                'tweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
                'TweakOrder': 0,
                'FMLCorePluginContainsFMLMod': 'true',
                'FMLCorePlugin': 'me.wallhacks.spark.mixin.MixinLoader',
                'ForceLoadAsMod': 'true',
                'FMLAT': 'spark_at.cfg'
        )
    }
}
